---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: node-feature-discovery
spec:
  chart:
    spec:
      chart: node-feature-discovery
      version: 0.14.1
      sourceRef:
        kind: HelmRepository
        name: node-feature-discovery

  values:
    image:
      repository: registry.k8s.io/nfd/node-feature-discovery
      pullPolicy: IfNotPresent
    imagePullSecrets: []

    ## ================================================================================================
    ## MASTER DEPLOYMENT PARAMETERS
    ## ================================================================================================
    master:
      replicaCount: 2

      serviceAccount:
        create: true
      rbac:
        create: true

      resources:
        limits:
          cpu: 200m
          memory: 256Mi
        requests:
          cpu: 100m
          memory: 128Mi

      nodeSelector: {}
      # Allow scheduling on controlplane nodes
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Equal"
          value: ""
          effect: "NoSchedule"
      # Prefer scheduling on controlplane nodes
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists


    ## ================================================================================================
    ## WORKER DAEMONSET PARAMETERS
    ## ================================================================================================
    worker:
      metricsPort: 8081

      serviceAccount:
        create: true
      rbac:
        create: true

      resources:
        limits:
          cpu: 200m
          memory: 256Mi
        requests:
          cpu: 100m
          memory: 128Mi

      nodeSelector: {}
      affinity: {}
      tolerations: []


    ## ================================================================================================
    ## TOPOLOGY UPDATER DEPLOYMENT PARAMETERS  --  DISABLED
    ## ================================================================================================
    topologyUpdater:
      enable: false


    ## ================================================================================================
    ## GARBAGE COLLECTOR DEPLOYMENT PARAMETERS
    ## ================================================================================================
    gc:
      enable: true
      replicaCount: 2
      interval: 1h

      serviceAccount:
        create: true
      rbac:
        create: true

      resources:
        limits:
          cpu: 200m
          memory: 256Mi
        requests:
          cpu: 100m
          memory: 128Mi

      nodeSelector: {}
      # Prefer scheduling on controlplane nodes
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists
      # Allow scheduling on controlplane nodes
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Equal"
          value: ""
          effect: "NoSchedule"


    ## ================================================================================================
    ## Enable encryption for worker <--> master comms
    ## ================================================================================================
    tls:
      enable: true
      certManager: true


    ## ================================================================================================
    ## MONITORING
    ## ================================================================================================
    prometheus:
      enable: true
      labels: {}
