---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus
spec:
  chart:
    spec:
      chart: kube-prometheus
      version: 8.21.2
      sourceRef:
        kind: HelmRepository
        name: bitnami

  values:
    global:
      imageRegistry: ""
      imagePullSecrets: []
      storageClass: ""

    ## ================================================================================================
    ## Prometheus Operator Parameters
    ## ================================================================================================
    operator:
      enabled: true

      ## @param operator.topologySpreadConstraints Topology Spread Constraints for pod assignment
      ## https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
      topologySpreadConstraints: []

      ## @param operator.logLevel Log level for Prometheus Operator
      logLevel: info
      ## @param operator.logFormat Log format for Prometheus Operator
      logFormat: logfmt

      ## @param operator.kubeletService.enabled If true, the operator will create and maintain a service for scraping kubelets
      ## @param operator.kubeletService.namespace Namespace to deploy the kubelet service
      kubeletService:
        enabled: true
        namespace: kube-system


    ## ================================================================================================
    ## Prometheus Parameters
    ## ================================================================================================
    prometheus:
      enabled: true

      ## Configure the ingress resource that allows you to access the
      ## Prometheus installation. Set up the URL
      ## ref: https://kubernetes.io/docs/user-guide/ingress/
      ingress:
        enabled: true
        hostname: prometheus.admin.home.mirceanton.com
        path: /
        ingressClassName: nginx

      ## @param prometheus.topologySpreadConstraints Prometheus Topology Spread Constraints for pod assignment
      ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
      ## The value is evaluated as a template
      topologySpreadConstraints: []

      ## @param prometheus.replicaCount Number of Prometheus replicas desired
      replicaCount: 2
      ## @param prometheus.shards Number of Prometheus shards desired
      shards: 2

      ## @param prometheus.logLevel Log level for Prometheus
      logLevel: info
      ## @param prometheus.logFormat Log format for Prometheus
      logFormat: logfmt

      ## Prometheus persistence parameters
      persistence:
        enabled: true
        accessModes: [ ReadWriteOnce ]
        size: 16Gi


    ## ================================================================================================
    ## Alertmanager Parameters
    ## ref: https://prometheus.io/docs/alerting/alertmanager/
    ## ================================================================================================
    alertmanager:
      enabled: true

      ## Configure the ingress resource that allows you to access the
      ## Alertmanager installation. Set up the URL
      ## ref: https://kubernetes.io/docs/user-guide/ingress/
      ingress:
        enabled: true
        hostname: alertmanager.admin.home.mirceanton.com
        path: /
        ingressClassName: nginx

      ## @param alertmanager.replicaCount Number of Alertmanager replicas desired
      replicaCount: 2

      ## @param alertmanager.logLevel Log level for Alertmanager
      logLevel: info
      ## @param alertmanager.logFormat Log format for Alertmanager
      logFormat: logfmt

      ## Alertmanager persistence parameters
      persistence:
        enabled: true
        accessModes: [ ReadWriteOnce ]
        size: 16Gi


    ## ================================================================================================
    ## Exporters
    ## ================================================================================================
    exporters:
      node-exporter:
        enabled: true
      kube-state-metrics:
        enabled: true

    # Node Exporter daemonset configuration
    node-exporter:
      ## podLabels Pod labels
      ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
      podLabels:
        jobLabel: node-exporter

      ## extraArgs Additional command line arguments to pass to node-exporter
      extraArgs:
        collector.filesystem.ignored-mount-points: "^/(dev|proc|sys|var/lib/docker/.+)($|/)"
        collector.filesystem.ignored-fs-types: "^(autofs|binfmt_misc|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|sysfs|tracefs)$"

      ## ServiceMonitor configuration
      serviceMonitor:
        enabled: true
        jobLabel: jobLabel
        metricRelabelings:
          - action: drop
            sourceLabels: ["mountpoint"]
            regex: /var/lib/kubelet/pods.+


    # Kube State Metrics deployment configuration
    kube-state-metrics:
      ## @param replicaCount Desired number of controller pods
      replicaCount: 2
      ## @param topologySpreadConstraints Topology Spread Constraints for pod assignment
      ## https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
      topologySpreadConstraints: []

      ## ServiceMonitor configuration
      serviceMonitor:
        enabled: true
        honorLabels: true
        relabelings:
          - action: replace
            regex: ^(.*)$
            replacement: $1
            sourceLabels: ["__meta_kubernetes_pod_node_name"]
            targetLabel: kubernetes_node


    ## @section Blackbox Exporter Deployment Parameters
    blackboxExporter:
      enabled: false

    ## Kubernetes Components Exporters
    kubelet:
      enabled: true
    kubeApiServer:
      enabled: true
    kubeControllerManager:
      enabled: true
    kubeScheduler:
      enabled: true
    coreDns:
      enabled: true
    kubeProxy:
      enabled: false

    ## ================================================================================================
    ## Role Based Access
    ## ref: https://kubernetes.io/docs/admin/authorization/rbac/
    ## ================================================================================================
    rbac:
      create: true
      pspEnabled: false
