---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus
spec:
  chart:
    spec:
      chart: kube-prometheus
      version: 8.21.2
      sourceRef:
        kind: HelmRepository
        name: bitnami

  values:
    ## Global Docker image parameters
    global:
      imageRegistry: ""
      imagePullSecrets: []
      storageClass: ""

    operator:
      ## @param operator.enabled Deploy Prometheus Operator to the cluster
      enabled: true

      ## @param operator.topologySpreadConstraints Topology Spread Constraints for pod assignment
      ## https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
      topologySpreadConstraints: []

      ## Create a servicemonitor for the operator
      serviceMonitor:
        ## @param operator.serviceMonitor.enabled Creates a ServiceMonitor to monitor Prometheus Operator
        enabled: true
        ## @param operator.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in prometheus.
        jobLabel: ""
        ## @param operator.serviceMonitor.interval Scrape interval (use by default, falling back to Prometheus' default)
        ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#endpoint
        interval: ""

      ## @param operator.logLevel Log level for Prometheus Operator
      logLevel: info
      ## @param operator.logFormat Log format for Prometheus Operator
      logFormat: logfmt

      ## @param operator.kubeletService.enabled If true, the operator will create and maintain a service for scraping kubelets
      ## @param operator.kubeletService.namespace Namespace to deploy the kubelet service
      kubeletService:
        enabled: true
        namespace: kube-system

      ## Restrict the namespaces that the operator watches
      ## @param operator.namespaces Optional comma-separated list of namespaces to watch (default=all).
      namespaces: ""

    ## @section Prometheus Parameters
    prometheus:
      ## @param prometheus.enabled Deploy Prometheus to the cluster
      enabled: true

      ## Service account for Prometheus to use.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
      serviceAccount:
        ## @param prometheus.serviceAccount.create Specify whether to create a ServiceAccount for Prometheus
        create: true
        ## @param prometheus.serviceAccount.automountServiceAccountToken Automount service account token for the server service account
        automountServiceAccountToken: true

      serviceMonitor:
        ## @param prometheus.serviceMonitor.enabled Creates a ServiceMonitor to monitor Prometheus itself
        enabled: true

        ## @param prometheus.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in prometheus.
        jobLabel: ""

        ## @param prometheus.serviceMonitor.interval Scrape interval (use by default, falling back to Prometheus' default)
        ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#endpoint
        interval: ""

      ## Configure the ingress resource that allows you to access the
      ## Prometheus installation. Set up the URL
      ingress:
        ## @param prometheus.ingress.enabled Enable ingress controller resource
        enabled: true

        ## @param prometheus.ingress.hostname Default host for the ingress resource
        hostname: prometheus.admin.home.mirceanton.com

        ## @param prometheus.ingress.path The Path to Prometheus. You may need to set this to '/*' in order to use this with ALB ingress controllers
        path: /

        ## @param prometheus.ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
        ingressClassName: nginx

        ## @param prometheus.ingress.tls Enable TLS configuration for the hostname defined at prometheus.ingress.hostname parameter
        ## TLS certificates will be retrieved from a TLS secret with name: {{- printf "%s-tls" .Values.prometheus.ingress.hostname }}
        ## You can use the prometheus.ingress.secrets parameter to create this TLS secret or relay on cert-manager to create it
        tls: false

        ## @param prometheus.ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
        selfSigned: false

      ## @param prometheus.topologySpreadConstraints Prometheus Topology Spread Constraints for pod assignment
      ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
      ## The value is evaluated as a template
      topologySpreadConstraints: []


      ## @param prometheus.scrapeInterval Interval between consecutive scrapes
      scrapeInterval: ""

      ## @param prometheus.evaluationInterval Interval between consecutive evaluations
      evaluationInterval: ""

      ## @param prometheus.scrapeTimeout Timeout after which the global scrape is ended
      ## ref: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config
      scrapeTimeout: ""

      ## @param prometheus.sampleLimit Per-scrape max number of scraped samples. Requires Prometheus v2.45.0 and newer
      ## ref: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config
      sampleLimit: ""

      ## @param prometheus.enforcedSampleLimit Override sampleLimits set by ServiceMonitor, PodMonitor or Probe objects
      ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#monitoring.coreos.com/v1.PrometheusSpec
      enforcedSampleLimit: ""

      ## @param prometheus.listenLocal ListenLocal makes the Prometheus server listen on loopback
      listenLocal: false

      ## @param prometheus.enableAdminAPI Enable Prometheus adminitrative API
      ## ref: https://prometheus.io/docs/prometheus/latest/querying/api/#tsdb-admin-apis
      enableAdminAPI: false

      ## @param prometheus.retention Metrics retention days
      retention: 21d

      ## @param prometheus.replicaCount Number of Prometheus replicas desired
      replicaCount: 2
      ## @param prometheus.shards Number of Prometheus shards desired
      shards: 2

      ## @param prometheus.logLevel Log level for Prometheus
      logLevel: info
      ## @param prometheus.logFormat Log format for Prometheus
      logFormat: logfmt

      ## Prometheus persistence parameters
      persistence:
        ## @param prometheus.persistence.enabled Use PVCs to persist data. If the storageSpec is provided this will not take effect.
        enabled: true
        ## @param prometheus.persistence.size Persistent Volume Size
        size: 8Gi

      ## Thanos sidecar container configuration
      ##
      thanos:
        ## @param prometheus.thanos.create Create a Thanos sidecar container
        create: true

        ## Configure the ingress resource that allows you to access the
        ## Thanos Sidecar installation. Set up the URL
        ## ref: https://kubernetes.io/docs/user-guide/ingress/
        ingress:
          ## @param prometheus.thanos.ingress.enabled Enable ingress controller resource
          enabled: true
          ## @param prometheus.thanos.ingress.hostname Default host for the ingress record
          hostname: thanos.admin.home.mirceanton.com
          ## @param prometheus.thanos.ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
          ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
          ingressClassName: nginx
          ## @param prometheus.thanos.ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
          ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
          tls: false
          ## @param prometheus.thanos.ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
          selfSigned: false

    ## Configuration for alertmanager
    ## ref: https://prometheus.io/docs/alerting/alertmanager/
    alertmanager:
      ## @param alertmanager.enabled Deploy Alertmanager to the cluster
      enabled: true

      ## Service account for Alertmanager to use.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
      serviceAccount:
        ## @param alertmanager.serviceAccount.create Specify whether to create a ServiceAccount for Alertmanager
        create: true
        ## @param alertmanager.serviceAccount.automountServiceAccountToken Automount service account token for the server service account
        automountServiceAccountToken: true

      ## If true, create a serviceMonitor for alertmanager
      serviceMonitor:
        ## @param alertmanager.serviceMonitor.enabled Creates a ServiceMonitor to monitor Alertmanager
        enabled: true
        ## @param alertmanager.serviceMonitor.interval Scrape interval. If not set, the Prometheus default scrape interval is used.
        ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#endpoint
        interval: ""

      ## Configure the ingress resource that allows you to access the
      ## Alertmanager installation. Set up the URL
      ## ref: https://kubernetes.io/docs/user-guide/ingress/
      ingress:
        ## @param alertmanager.ingress.enabled Enable ingress controller resource
        enabled: true
        ## @param alertmanager.ingress.hostname Default host for the ingress resource
        hostname: alertmanager.admin.home.mirceanton.com
        ## @param alertmanager.ingress.path The Path to Alert Manager. You may need to set this to '/*' in order to use this with ALB ingress controllers.
        path: /
        ## @param alertmanager.ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
        ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
        ingressClassName: nginx
        ## @param alertmanager.ingress.tls Enable TLS configuration for the hostname defined at alertmanager.ingress.hostname parameter
        ## TLS certificates will be retrieved from a TLS secret with name: {{- printf "%s-tls" .Values.alertmanager.ingress.hostname }}
        ## You can use the alertmanager.ingress.secrets parameter to create this TLS secret or relay on cert-manager to create it
        tls: false
        ## @param alertmanager.ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
        selfSigned: false

      ## Alertmanager configuration
      ## ref: https://prometheus.io/docs/alerting/configuration/#configuration-file
      config:
        global:
          resolve_timeout: 5m
        route:
          group_by: ['job']
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 12h
          receiver: 'null'
          routes:
            - match:
                alertname: Watchdog
              receiver: 'null'
        receivers:
          - name: 'null'

      ## @param alertmanager.externalConfig Alertmanager configuration is created externally. If true, `alertmanager.config` is ignored, and a secret will not be created.
      ## Alertmanager requires a secret named `alertmanager-{{ template "kube-prometheus.alertmanager.fullname" . }}`
      ## It must contain:
      ##     alertmanager.yaml: <config>
      ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/user-guides/alerting.md#alerting
      externalConfig: false

      ## @param alertmanager.replicaCount Number of Alertmanager replicas desired
      replicaCount: 2

      ## @param alertmanager.logLevel Log level for Alertmanager
      logLevel: info
      ## @param alertmanager.logFormat Log format for Alertmanager
      logFormat: logfmt

      ## @param alertmanager.retention Metrics retention days
      retention: 120h

      ## Alertmanager persistence parameters
      persistence:
        enabled: true
        size: 8Gi

    ## Exporters
    exporters:
      node-exporter:
        ## @param exporters.node-exporter.enabled Enable node-exporter
        enabled: true
      kube-state-metrics:
        ## @param exporters.kube-state-metrics.enabled Enable kube-state-metrics
        enabled: true

    ## @param node-exporter [object] Node Exporter deployment configuration
    node-exporter:
      service:
        labels:
          jobLabel: node-exporter
      serviceMonitor:
        enabled: true
        jobLabel: jobLabel
      extraArgs:
        collector.filesystem.ignored-mount-points: "^/(dev|proc|sys|var/lib/docker/.+)($|/)"
        collector.filesystem.ignored-fs-types: "^(autofs|binfmt_misc|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|sysfs|tracefs)$"

    ## @param kube-state-metrics [object] Kube State Metrics deployment configuration
    kube-state-metrics:
      serviceMonitor:
        enabled: true
        honorLabels: true

    ## Component scraping for kubelet and kubelet hosted cAdvisor
    kubelet:
      enabled: true
      namespace: kube-system

    ## @section Blackbox Exporter Deployment Parameters
    blackboxExporter:
      enabled: false

    ## Component scraping the kube-apiserver
    kubeApiServer:
      enabled: true

    ## Component scraping the kube-controller-manager
    kubeControllerManager:
      enabled: true
      namespace: kube-system

    ## Component scraping kube scheduler
    kubeScheduler:
      enabled: true
      namespace: kube-system

    ## Component scraping coreDns
    coreDns:
      enabled: true
      namespace: kube-system

    ## Component scraping the kube-proxy
    kubeProxy:
      enabled: false

    ## Role Based Access
    ## ref: https://kubernetes.io/docs/admin/authorization/rbac/
    rbac:
      create: true
      pspEnabled: false
