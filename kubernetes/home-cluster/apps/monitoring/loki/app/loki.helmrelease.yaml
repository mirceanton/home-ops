---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: loki
spec:
  chart:
    spec:
      chart: loki
      version: 5.26.0
      sourceRef:
        kind: HelmRepository
        name: grafana

  values:
    global:
      image:
        # -- Overrides the Docker registry globally for all images
        registry: null
      dnsService: coreDNS
      dnsNamespace: kube-system

    # -- Image pull secrets for Docker images
    imagePullSecrets: []

    serviceAccount:
      create: true
      automountServiceAccountToken: true

    # RBAC configuration
    rbac:
      pspEnabled: false
      sccEnabled: false
      namespaced: false

    test:
      enabled: false

    # Monitoring section determines which monitoring features to enable
    monitoring:
      dashboards:
        enabled: true
        namespace: monitoring
        annotations:
          grafana_folder: Loki
        labels:
          grafana_dashboard: "1"

      # Recording rules for monitoring Loki, required for some dashboards
      rules:
        enabled: true
        alerting: true
        namespace: monitoring

      # ServiceMonitor configuration
      serviceMonitor:
        enabled: true
        interval: 15s
        scrapeTimeout: null
        metricsInstance:
          enabled: true

      # Self monitoring determines whether Loki should scrape its own logs.
      # This feature currently relies on the Grafana Agent Operator being installed,
      # which is installed by default using the grafana-agent-operator sub-chart.
      # It will create custom resources for GrafanaAgent, LogsInstance, and PodLogs to configure
      # scrape configs to scrape its own logs with the labels expected by the included dashboards.
      selfMonitoring:
        enabled: true
        tenant:
          name: "self-monitoring"
        grafanaAgent:
          installOperator: true

      # The Loki canary pushes logs to and queries from this loki installation to test
      # that it's working correctly
      lokiCanary:
        enabled: true

    # Configuration for the write pod(s)
    write:
      replicas: 2
      persistence:
        volumeClaimsEnabled: true
        dataVolumeParameters:
          emptyDir: {}
        enableStatefulSetAutoDeletePVC: false
        size: 10Gi
        selector: null

    # Configuration for the read pod(s)
    read:
      replicas: 2
      persistence:
        enableStatefulSetAutoDeletePVC: true
        size: 10Gi
        selector: null

    # Configuration for the backend pod(s)
    backend:
      replicas: 2
      persistence:
        volumeClaimsEnabled: true
        dataVolumeParameters:
          emptyDir: {}
        enableStatefulSetAutoDeletePVC: true
        size: 10Gi

    # Use either this ingress or the gateway, but not both at once.
    ingress:
      enabled: false

    # Configuration for the gateway
    gateway:
      enabled: true
      replicas: 2
      verboseLogging: true

      # Gateway ingress configuration
      ingress:
        enabled: false
        ingressClassName: nginx
        hosts:
          - host: gateway.loki.admin.home.mirceanton.com
            paths:
              - path: /
        tls: []

      # Basic auth configuration
      basicAuth:
        enabled: false
