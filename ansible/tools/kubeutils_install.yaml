---
- name: Install kubectl and other utilities
  hosts: localhost
  gather_facts: true
  become: true

  vars:
    kubectl_version: 1.27.1
    kubens_version: 0.9.4
    kubectx_version: 0.9.4
    k9s_version: 0.27.4

  tasks:
    - name: Get system architecture
      ansible.builtin.shell: dpkg --print-architecture
      register: deb_architecture
      changed_when: false

    - name: "[DEBUG]: Show system architecture"
      ansible.builtin.debug:
        msg:
          - "System architecture (dpkg) is: {{ deb_architecture.stdout }}"
          - "System architecture (ansible) is: {{ ansible_architecture }}"
      when: debug | default(false)

    - name: Build URLs from vars
      ansible.builtin.set_fact:
        kubectl_url: "https://dl.k8s.io/release/v{{ kubectl_version }}/bin/linux/{{ deb_architecture.stdout }}/kubectl"
        kubens_url: "https://github.com/ahmetb/kubectx/releases/download/v{{ kubens_version }}/kubens_v{{ kubens_version }}_linux_{{ ansible_architecture }}.tar.gz"
        kubectx_url: "https://github.com/ahmetb/kubectx/releases/download/v{{ kubectx_version }}/kubectx_v{{ kubectx_version }}_linux_{{ ansible_architecture }}.tar.gz"
        k9s_url: "https://github.com/derailed/k9s/releases/download/v{{ k9s_version }}/k9s_Linux_{{ deb_architecture.stdout }}.tar.gz"

    - name: "[DEBUG]: Show URLs"
      ansible.builtin.debug:
        msg:
          - "kubectl URL: {{ kubectl_url }}"
          - "kubens URL: {{ kubens_url }}"
          - "kubectx URL: {{ kubectx_url }}"
          - "k9s URL: {{ k9s_url }}"
      when: debug | default(false)

    - name: Download and Install kubectl
      ansible.builtin.include_role:
        name: mirceanton.downloader
      vars:
        downloader_download_url: "{{ kubectl_url }}"
        downloader_download_validate_certs: false
        downloader_unarchive: false
        downloader_executable_src: "/tmp/kubectl"
        downloader_executable_dest: /usr/local/bin/kubectl

    - name: Generate kubectl bash completion
      ansible.builtin.shell: kubectl completion bash > /etc/bash_completion.d/kubectl
      args:
        creates: /etc/bash_completion.d/kubectl

    - name: Download and Install kubens
      ansible.builtin.include_role:
        name: mirceanton.downloader
      vars:
        downloader_download_url: "{{ kubens_url }}"
        downloader_download_dest: "/tmp/kubens_v{{ kubens_version }}_linux_{{ ansible_architecture }}.tar.gz"
        downloader_download_validate_certs: false
        downloader_unarchive: true
        downloader_executable_src: "/tmp/kubens"
        downloader_executable_dest: /usr/local/bin/kubens

    - name: Download and Install kubectx
      ansible.builtin.include_role:
        name: mirceanton.downloader
      vars:
        downloader_download_url: "{{ kubectx_url }}"
        downloader_download_dest: "/tmp/kubectx_v{{ kubectx_version }}_linux_{{ ansible_architecture }}.tar.gz"
        downloader_download_validate_certs: false
        downloader_unarchive: true
        downloader_executable_src: "/tmp/kubectx"
        downloader_executable_dest: /usr/local/bin/kubectx

    - name: Download and Install k9s
      ansible.builtin.include_role:
        name: mirceanton.downloader
      vars:
        downloader_download_url: "{{ k9s_url }}"
        downloader_download_dest: "/tmp/k9s_Linux_{{ deb_architecture.stdout }}.tar.gz"
        downloader_download_validate_certs: false
        downloader_unarchive: true
        downloader_executable_src: "/tmp/k9s"
        downloader_executable_dest: /usr/local/bin/k9s
