---
# yaml-language-server: $schema=https://raw.githubusercontent.com/budimanjojo/talhelper/master/pkg/config/schemas/talconfig.json
clusterName: ${clusterName}
endpoint: https://${clusterEndpointIP}:6443

# renovate: datasource=github-releases depName=siderolabs/talos
talosVersion: v1.5.5

# renovate: datasource=github-releases depName=kubernetes/kubernetes
kubernetesVersion: v1.28.4

domain: cluster.local
additionalApiServerCertSans:
  - ${clusterEndpointIP}
additionalMachineCertSans:
  - ${clusterEndpointIP}

allowSchedulingOnControlPlanes: true
cniConfig:
  name: none

patches:
  - |-  # Disable proxy
    cluster:
      proxy:
        disabled: true

  - |-  # Disable coreDNS
    cluster:
      coreDNS:
        disabled: true

  - |-  # Enable KubePrism
    machine:
      features:
        kubePrism:
          enabled: true
          port: 7445

  - |-  # Kubelet configuration
    machine:
      kubelet:
        extraArgs:
          feature-gates: CronJobTimeZone=true,GracefulNodeShutdown=true,NewVolumeManagerReconstruction=false
          rotate-server-certificates: "true"

worker:
  patches: []

controlPlane:
  patches:
    - |-  # Keycloak Auth
      cluster:
        apiServer:
          extraArgs:
            oidc-client-id: kubernetes
            oidc-groups-claim: groups
            oidc-groups-prefix: keycloak_
            oidc-username-prefix: keycloak_
            oidc-issuer-url: https://auth.${clusterDomain}/keycloak/realms/home
            oidc-username-claim: email

nodes:
  - hostname: nuc
    ipAddress: 10.0.10.11
    controlPlane: true
    nodeLabels:
      node-role.kubernetes.io/control-plane: "true"   # runs the kubernetes controlplane
      node-role.kubernetes.io/controller: "true"      # runs controllers
      node-role.kubernetes.io/worker: "true"          # runs general workloads
      node-role.kubernetes.io/storage: "true"         # runs the storage backend

    installDisk: /dev/nvme0n1
    # machineDisks:
    #   - device: /dev/sda
    #     partitions:
    #       - mountpoint: /var/mnt/postgres

    networkInterfaces:
      - deviceSelector:
          busPath: "0*"
        dhcp: true
        vip:
          ip: ${clusterEndpointIP}

    schematic:
      customization:
        systemExtensions:
          officialExtensions:
            - siderolabs/i915-ucode
            - siderolabs/intel-ucode
            - siderolabs/iscsi-tools

    # patches:
    #   - |-  # Extra disks
    #     machine:
    #       kubelet:
    #         extraMounts:
    #           - destination: /var/mnt/postgres
    #             type: bind
    #             source: /var/mnt/postgres
    #             options:
    #               - rbind
    #               - rshared
    #               - rw

  - hostname: srv
    ipAddress: 10.0.10.12
    controlPlane: true
    nodeLabels:
      node-role.kubernetes.io/control-plane: "true"   # runs the kubernetes controlplane
      node-role.kubernetes.io/controller: "true"      # runs controllers
      node-role.kubernetes.io/worker: "true"          # runs general workloads
      node-role.kubernetes.io/storage: "true"         # runs the storage backend

    installDisk: /dev/nvme0n1
    # machineDisks:
    #   - device: /dev/sda
    #     partitions:
    #       - mountpoint: /var/mnt/postgres

    networkInterfaces:
      - deviceSelector:
          busPath: "0*"
        dhcp: true
        vip:
          ip: ${clusterEndpointIP}
    schematic:
      customization:
        systemExtensions:
          officialExtensions:
            - siderolabs/i915-ucode
            - siderolabs/intel-ucode
            - siderolabs/iscsi-tools

    # patches:
    #   - |-  # Extra disks
    #     machine:
    #       kubelet:
    #         extraMounts:
    #           - destination: /var/mnt/postgres
    #             type: bind
    #             source: /var/mnt/postgres
    #             options:
    #               - rbind
    #               - rshared
    #               - rw

  - hostname: minisforum
    ipAddress: 10.0.10.13
    controlPlane: true
    nodeLabels:
      node-role.kubernetes.io/control-plane: "true"   # runs the kubernetes controlplane
      node-role.kubernetes.io/controller: "true"      # runs controllers
      node-role.kubernetes.io/worker: "true"          # runs general workloads
      node-role.kubernetes.io/storage: "true"         # runs the storage backend

    installDisk: /dev/nvme0n1
    # machineDisks:
    #   - device: /dev/sda
    #     partitions:
    #       - mountpoint: /var/mnt/postgres

    networkInterfaces:
      - deviceSelector:
          busPath: "0*"
        dhcp: true
        vip:
          ip: ${clusterEndpointIP}

    schematic:
      customization:
        systemExtensions:
          officialExtensions:
            - siderolabs/amd-ucode
            - siderolabs/iscsi-tools

    # patches:
    #   - |-  # Extra disks
    #     machine:
    #       kubelet:
    #         extraMounts:
    #           - destination: /var/mnt/postgres
    #             type: bind
    #             source: /var/mnt/postgres
    #             options:
    #               - rbind
    #               - rshared
    #               - rw
